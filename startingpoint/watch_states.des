INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI
    import time
    
    root = Tk()
    root.title("A Title")
    g = DWatchGUI(root, eventhandler)
    CURRENTDISPLAY = 0 
    eventhandler.start()
    
    root.mainloop()

STATECHART:
    Start [DS]
    Root
        Display [CS] [DS]
            TimeDisplay [DS]          #0
            ChronoDisplay             #1
            EditTime                  #2
                PressEditTime
                EnterEditTime
                ExitEditTime
            EditAlarm                 #3
                PressEditAlarm
                EnterEditAlarm
                EditAlarm
                    Editing [CS] [DS]
                    Timeout [CS] [DS]
                ExitEditAlarm
        TimeHandler [CS] [DS]
            TimeUpdater [CS] [DS]
                On [DS]
                Off
            ChronoUpdater [CS] [DS]
                On 
                Off [DS]
        LightHandler [CS] [DS]
            LightUpdater [DS]
            LightTurnOff

# Start to TimeDisplay
TRANSITION:
    S: Start
    N: Root
    T: 0 [OTT]
    O: [DUMP("start printing")]


# TIME DISPLAY

#TimeDisplay loop, draws every 0.1 seconds
TRANSITION:
    S: Root.Display.TimeDisplay
    N: Root.Display.TimeDisplay
    T: 0.1
    O: g.refreshTimeDisplay()

# TimeUpdater 1 second loop
TRANSITION:
    S: Root.TimeHandler.TimeUpdater.On
    N: Root.TimeHandler.TimeUpdater.On
    T: 1  # Every 1 second
    O: g.increaseTimeByOne()

#Turn TimeUpdater off when going to edit MODE
TRANSITION:
    S: Root.TimeHandler.TimeUpdater.On
    N: Root.TimeHandler.TimeUpdater.Off
    C: CURRENTDISPLAY == 0
    E: released
    O: print "update off"
    
# TimeDisplay to ChronoDisplay
TRANSITION:
    S: Root.Display.TimeDisplay
    N: Root.Display.ChronoDisplay
    E: changeMode
    O: CURRENTDISPLAY = 1
       g.refreshChronoDisplay()
      

# CHRONO DISPLAY

# ChronoDisplay 0.1 second loop
TRANSITION:
    S: Root.Display.ChronoDisplay
    N: Root.Display.ChronoDisplay
    T: 0.1  # Every 1 second
    O: g.refreshChronoDisplay()

#ChronoDisplay update loop
TRANSITION:
    S: Root.TimeHandler.ChronoUpdater.On
    N: Root.TimeHandler.ChronoUpdater.On
    T: 0.01
    O: g.increaseChronoByOne()

#Turn Chrono on, if in ChronoDisplay
TRANSITION:
    S: Root.TimeHandler.ChronoUpdater.Off
    N: Root.TimeHandler.ChronoUpdater.On
    E: initChrono
    C: CURRENTDISPLAY == 1

#Turn Chrono off, if in ChronoDisplay
TRANSITION:
    S: Root.TimeHandler.ChronoUpdater.On
    N: Root.TimeHandler.ChronoUpdater.Off
    E: initChrono
    C: CURRENTDISPLAY == 1

# Reset Chrono
TRANSITION:
    S: Root.Display.ChronoDisplay
    N: Root.Display.ChronoDisplay
    E: resetChrono
    O: g.resetChrono()

# ChronoDisplay to TimeDisplay
TRANSITION:
    S: Root.Display.ChronoDisplay
    N: Root.Display.TimeDisplay
    E: changeMode
    O: print("Returning to TimeDisplay")
       CURRENTDISPLAY = 0
       g.refreshTimeDisplay()
      


# BACKLIGHTING

# Turn on light
TRANSITION:
    S: Root.LightHandler.LightUpdater
    N: Root.LightHandler.LightUpdater
    E: lightOn
    O: g.setIndiglo()
       print("Turning on light")
    
# Turn off light
TRANSITION:
    S: Root.LightHandler.LightUpdater
    N: Root.LightHandler.LightTurnOff
    E: lightOff

# Wait 2 seconds
TRANSITION:
    S: Root.LightHandler.LightTurnOff
    N: Root.LightHandler.LightUpdater
    T: 2
    O: g.unsetIndiglo()
       print("Turning off light")


# ALARM MODE

# From TimeDisplay to EditAlarm
TRANSITION:
    S: Root.Display.TimeDisplay
    N: Root.Display.EditAlarm.PressEditAlarm
    E: setAlarm
    O: print("EditAlarm clicked")

TRANSITION:
    S: Root.Display.EditAlarm.PressEditAlarm
    N: Root.Display.EditAlarm.EditAlarm
    T: 1.5
    O: print("Entered EditAlarm")
       g.startSelection()
       g.refreshAlarmDisplay()

TRANSITION:
    S: Root.Display.EditTime.PressEditAlarm
    N: Root.Display.TimeDisplay
    E: stopInc
    O: print("EditAlarm unpressed before transition")

TRANSITION:
    S: Root.Display.EditAlarm.EditAlarm.Editing
    N: Root.Display.EditAlarm.EditAlarm
    E: increase
    O: g.increaseSelection()
       g.refreshAlarmDisplay()
       print("Incresing digit") 

TRANSITION:
    S: Root.Display.EditAlarm.EditAlarm.Editing
    N: Root.Display.EditAlarm.EditAlarm
    E: finishEdit
    O: g.selectNext()
       g.refreshAlarmDisplay()
       print("Selecting next") 

TRANSITION:
    S: Root.Display.EditAlarm.EditAlarm.Timeout
    N: Root.Display.TimeDisplay
    T: 5
    O: print("Alarm editing timeout") 
       g.refreshTimeDisplay()


# TIME EDITING MODE

# From TimeDisplay to EditTime
TRANSITION:
    S: Root.Display.TimeDisplay
    N: Root.Display.EditTime.PressEditTime
    E: editTime
    O: print("EditTime clicked")
       CURRENTDISPLAY = 313

TRANSITION:
    S: Root.Display.EditTime.PressEditTime
    N: Root.Display.TimeDisplay
    T: 1.5 
    O: CURRENTDISPLAY = 0


TRANSITION:
    S: Root.Display.TimeDisplay
    N: Root.Display.EditTime.EnterEditTime
    E: released
    O: CURRENTDISPLAY = 2
       g.startSelection()
       print("Going to EditTime")

# increase the first digit by one
TRANSITION:
    S: Root.Display.EditTime
    N: Root.Display.EditTime
    E: increase
    O: g.increaseSelection()
       print("Incresing digit") 


